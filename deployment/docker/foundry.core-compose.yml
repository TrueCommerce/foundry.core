version: "3.4"

services:
  rabbitmq:
    image: rabbitmq:3.8.2-management-alpine
    restart: always
    environment:
      # RabbitMQ user
      - RABBITMQ_DEFAULT_USER=<rabbitmq user>
      # RabbitMQ password
      - RABBITMQ_DEFAULT_PASS=<rabbitmq password>
    ports:
      - 5672:5672
      - 15672:15672

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.4.2
    container_name: elasticsearch
    restart: always
    environment:
      - cluster.name=elasticsearch
      - network.host=0.0.0.0
      - bootstrap.memory_lock=true
      - discovery.zen.minimum_master_nodes=1
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms1g -Xmx1g"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - esdata:/usr/share/elasticsearch/data
    ports:
      - 9200:9200

  kibana:
    depends_on:
      - elasticsearch
    image: docker.elastic.co/kibana/kibana:7.4.2
    restart: always
    environment:
      - server.host=0
      - server.name=kibana
      - elasticsearch.url=http://elasticsearch:9200
      - xpack.monitoring.ui.container.elasticsearch.enabled=true
    ports:
      - 5601:5601

  foundry_core_security_maintenance:
    depends_on:
      - rabbitmq
      - elasticsearch
      - kibana
    image: truecommerce/foundry.core.security.maintenance:2.5.0.rc7
    restart: always
    environment:
      # Core Security Microservice SQL connection string
      - Foundry__Security__SQLConnection=<Core DB connection string>
      # indicates whether to run Expired Sessions Cleaner task
      - Foundry__Security__ExpiredSessionsCleaner__Run=true
      # Expired Sessions Cleaner cycle. It will sleep for Cycle - Actual Work Time but not less than 30 seconds between cycles
      - Foundry__Security__ExpiredSessionsCleaner__Cycle=0.00:03:00
      # indicates whether to run Expired Certificates Cleaner task
      - Foundry__Security__ExpiredCertificatesCleaner__Run=true
      # Expired Certificates Cleaner cycle. It will sleep for Cycle - Actual Work Time but not less than 30 seconds between cycles
      - Foundry__Security__ExpiredCertificatesCleaner__Cycle=1.00:00:00
      # Timeout to delete expired certificates (expired certificate will be deleted after specified timespan)
      - Foundry__Security__ExpiredCertificatesCleaner__ExpiredCertificateTimeout=10.00:00:00
      # indicates whether to run Expired ExternalReferences Cleaner task
      - Foundry__Security__ExpiredExternalReferencesCleaner__Run=true
      # Expired ExternalReferences Cleaner cycle. It will sleep for Cycle - Actual Work Time but not less than 30 seconds between cycles
      - Foundry__Security__ExpiredExternalReferencesCleaner__Cycle=1.00:00:00
      # RabbitMQ connection string
      - Foundry__RabbitMQ__Host=rabbitmq://rabbitmq
      # RabbitMQ user
      - Foundry__RabbitMQ__User=<rabbitmq user>
      # RabbitMQ password
      - Foundry__RabbitMQ__Password=<rabbitmq password>
      # RabbitMQ timeout
      - Foundry__RabbitMQ__Timeout=0.00:01:00
      #elasticsearch
      - Logging__Elasticsearch__nodeUris=http://elasticsearch:9200

  foundry_core_security_microservice:
    depends_on:
      - rabbitmq
      - elasticsearch
      - kibana
    image: truecommerce/foundry.core.security.microservice:2.5.0.rc7
    restart: always
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      # Core Security Microservice SQL connection string
      - Foundry__Security__SQLConnection=<Security DB connection string>
      # Core Configuration Microservice SQL connection string
      - Foundry__Configuration__SQLConnection=<Configuration DB connection string>
      # JWT secret
      - Foundry__Security__JwtSecret=<Jwt Secret>
      # JWT default expire time
      - Foundry__Security__JwtDefaultExpireTime=0.00:30:00
      # indicates whether to override user on logon
      - Foundry__Security__OverrideUserOnLogOn=true
      # CORS whitelist
      #- Foundry__Security__CorsOriginAllowed=host1,host2,host3
      # MFA: indicates whether MFA is allowed
      - Foundry__Security__MFA__Allowed=true
      # MFA: indicates whether to allow old non MFA methods like LogOn
      - Foundry__Security__MFA__NonMFAMethodsAllowed=true
      # MFA: CDYNE key (MFA SMS provider)
      #- Foundry__Security__MFA__CDYNEKey=<CDYNE Key>
      # MFA: Generated secret code timeout
      - Foundry__Security__MFA__CodeTimeout=0.00:05:00
      # MFA: For how long to keep MFA saved node IP (30 days by default)
      - Foundry__Security__MFA__KeepNodesTimeout=30.00:00:00
      # RabbitMQ connection string
      - Foundry__RabbitMQ__Host=rabbitmq://rabbitmq
      # RabbitMQ user
      - Foundry__RabbitMQ__User=<rabbitmq user>
      # RabbitMQ password
      - Foundry__RabbitMQ__Password=<rabbitmq password>
      # RabbitMQ timeout
      - Foundry__RabbitMQ__Timeout=0.00:01:00
      #elasticsearch
      - Logging__Elasticsearch__nodeUris=http://elasticsearch:9200
      # Cloud license server connection string
      - Foundry__CloudLicenseService=https://licensing.truecommerce.com/LicensingManagement/LicenseManagerServer.svc
      #- ASPNETCORE_URLS=https://+;http://+
      #- ASPNETCORE_Kestrel__Certificates__Default__Password=<certificate password>
      #- ASPNETCORE_Kestrel__Certificates__Default__Path=/https/<certificate file name>
    #volumes:
    #- <certificate folder path>:/https/
    expose:
      - "80"
    # healthcheck:
    #   start_period: 30s
    #   interval: 1m30s
    #   timeout: 10s
    #   retries: 3
    #   test: curl --fail -s http://localhost/healthcheck || exit 1

  foundry_core_sync_microservice:
    image: truecommerce/foundry.core.sync.microservice:2.5.0.rc7
    depends_on:
      - foundry_core_security_microservice
    restart: always
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      # Foundry root url
      - Foundry__RootUrl=http://foundry.core.apigateway.microservice
      # Core Sync Microservice SQL connection string
      - Foundry__Sync__SQLConnection=<Sync DB connection string>
      # CORS whitelist
      #- Foundry__Sync__CorsOriginAllowed=host1,host2,host3
      # RabbitMQ connection string
      - Foundry__RabbitMQ__Host=rabbitmq://rabbitmq
      # RabbitMQ user
      - Foundry__RabbitMQ__User=<rabbitmq user>
      # RabbitMQ password
      - Foundry__RabbitMQ__Password=<rabbitmq password>
      # RabbitMQ timeout
      - Foundry__RabbitMQ__Timeout=0.00:01:00
      #elasticsearch
      - Logging__Elasticsearch__nodeUris=http://elasticsearch:9200
    expose:
      - "80"
    # healthcheck:
    #   start_period: 30s
    #   interval: 1m30s
    #   timeout: 10s
    #   retries: 3
    #   test: curl --fail -s http://localhost/healthcheck || exit 1

  foundry_core_configuration_microservice:
    image: truecommerce/foundry.core.configuration.microservice:2.5.0.rc7
    depends_on:
      - foundry_core_security_microservice
    restart: always
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      # Foundry root url
      - Foundry__RootUrl=http://foundry.core.apigateway.microservice
      # Core Configuration Microservice SQL connection string
      - Foundry__Configuration__SQLConnection=<Configuration DB connection string>
      # standard url prefix, will be excluded from tenant configuration detection
      # - Foundry__Configuration__StandardUrlPrefix=<standard login page host name>
      # RabbitMQ connection string
      - Foundry__RabbitMQ__Host=rabbitmq://rabbitmq
      # RabbitMQ user
      - Foundry__RabbitMQ__User=<rabbitmq user>
      # RabbitMQ password
      - Foundry__RabbitMQ__Password=<rabbitmq password>
      # RabbitMQ timeout
      - Foundry__RabbitMQ__Timeout=0.00:01:00
      #elasticsearch
      - Logging__Elasticsearch__nodeUris=http://elasticsearch:9200
    expose:
      - "80"

  foundry.core.apigateway.microservice:
    depends_on:
      - foundry_core_security_microservice
      - foundry_core_sync_microservice
      - foundry_core_configuration_microservice
    image: truecommerce/foundry.core.apigateway.microservice:2.5.0.rc7
    restart: always
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ReverseProxy__Clusters__security_microservice__Destinations__security_microservice_destination1__Address=http://foundry_core_security_microservice
      - ReverseProxy__Clusters__sync_microservice__Destinations__sync_microservice_destination1__Address=http://foundry_core_sync_microservice
      - ReverseProxy__Clusters__configuration_microservice__Destinations__configuration_microservice_destination1__Address=http://foundry_core_configuration_microservice
    ports:
      - "30100:80"

volumes:
  esdata:
